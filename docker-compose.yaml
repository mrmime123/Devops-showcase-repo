# docker-compose.yml
services:
  frontend:
    build:
      context: .
      dockerfile: frontend/Dockerfile
    container_name: frontend
    ports:
      - "3000:80"
    depends_on:
      - backend
    environment:
      - REACT_APP_API_BASE_URL=http://backend:8000
    restart: always

  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
    container_name: backend
    ports:
      - "8000:8000"
    depends_on:
      kafka:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgresql://postgres:password@db:5432/devopsdb
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    restart: always

  email_service:
    build:
      context: ./email_service
      dockerfile: ./Dockerfile
    container_name: email_service
    depends_on:
      kafka:
        condition: service_healthy
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - EMAIL_SMTP_HOST=smtp.example.com
      - EMAIL_SMTP_PORT=587
      - EMAIL_USER=your@email.com
      - EMAIL_PASSWORD=yourpassword
      - EMAIL_RECEIVER=your@email.com
    restart: always

  db:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_DB: devopsdb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  zookeeper:
    image: confluentinc/cp-zookeeper:7.6.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.6.0
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true" 
    healthcheck:
      test: ["CMD-SHELL", "kafka-broker-api-versions --bootstrap-server kafka:9092 || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s 
volumes:
  pgdata:
    driver: local